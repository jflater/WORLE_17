
#  Load packages
library(phyloseq)
library(vegan)
library(indicspecies)
library(permute)
library(ggplot2)
library(tidyverse)
library(gridExtra)

# Read in phyloseq objects
physeq <- readRDS("Data/data.mintax1.goods.9.phy.RDS")

physeq <- subset_samples(physeq, day %in% c("7", "14", "21", "35", "49", "97"))

physeq

# check for 0s in OTUs
min(taxa_sums(physeq))

# filter taxa to those with at least 1 count per OTU
physeq <- filter_taxa(physeq, function(x) sum(x) >= 1, T)

# Rarefy to min sample size
physeq <- rarefy_even_depth(physeq, rngseed=15879966)

# Day works better as factor when plotting
sample_data(physeq)$day <- as.factor(sample_data(physeq)$day)

# check min taxa sums
min(taxa_sums(physeq))

# physeq object
physeq

# Get only Alfalfa with more than 10 per OTU and repeat for all treatments
alf.physeq <- subset_samples(physeq, treatment %in% "Alfalfa")
min(taxa_sums(alf.physeq))
alf.physeq <- filter_taxa(alf.physeq, function(x) sum(x) >= 10, T)

comp.physeq <- subset_samples(physeq, treatment %in% "Compost")
min(taxa_sums(comp.physeq))
comp.physeq <- filter_taxa(comp.physeq, function(x) sum(x) >= 10, T)

mix.physeq <- subset_samples(physeq, treatment %in% "CompAlfa")
min(taxa_sums(mix.physeq))
mix.physeq <- filter_taxa(mix.physeq, function(x) sum(x) >= 10, T)

cont.physeq <- subset_samples(physeq, treatment %in% "Control")
min(taxa_sums(cont.physeq))
cont.physeq <- filter_taxa(cont.physeq, function(x) sum(x) >= 10, T)

# Make relative abundance
r.alf.physeq <- transform_sample_counts(alf.physeq, function(x) x/sum(x))
r.comp.physeq <- transform_sample_counts(comp.physeq, function(x) x/sum(x))
r.mix.physeq <- transform_sample_counts(mix.physeq, function(x) x/sum(x))
r.cont.physeq <- transform_sample_counts(cont.physeq, function(x) x/sum(x))

abund_val <- function(physeq){
  otu.abun = apply(otu_table(physeq),1,mean)
  # Calculate the frequency of each OTU across all samples
  otu.freq = rowSums(otu_table(physeq) != 0)/nsamples(physeq)
  phyla = as.vector(data.frame(tax_table(physeq)))
  otuabun = cbind.data.frame(abundance=log(otu.abun),frequency=otu.freq,phyla)
  return(otuabun)
}
#melt.r.alf <- psmelt(tax_glom(r.alf.physeq, taxrank = rank_names(r.alf.physeq)[4]))
abun.alf <- abund_val(r.alf.physeq)
alf.a.o <- ggplot(abun.alf, aes(x=abundance,y=frequency,color=Class)) + 
  geom_point(size=3) + 
  xlab("Average relative abundance (log10 scale)") + 
  ylab("frequency in all samples") + 
  labs(title="Distribution of all OTU phyla-all alfalfa days microbiome") + 
  theme(legend.position="none")

abun.comp <- abund_val(r.comp.physeq)
comp.a.o <- ggplot(abun.comp, aes(x=abundance,y=frequency,color=Class)) + 
  geom_point(size=3) + 
  xlab("Average relative abundance (log10 scale)") + 
  ylab("frequency in all samples") + 
  labs(title="Distribution of all OTU phyla-all compost days microbiome") + 
  theme(legend.position="none")

abun.mix <- abund_val(r.mix.physeq)
mix.a.o <- ggplot(abun.mix, aes(x=abundance,y=frequency,color=Class)) + 
  geom_point(size=3) + 
  xlab("Average relative abundance (log10 scale)") + 
  ylab("frequency in all samples") + 
  labs(title="Distribution of all OTU phyla-all mix days microbiome") + 
  theme(legend.position="none")

abun.cont <- abund_val(r.cont.physeq)
cont.a.o <- ggplot(abun.cont, aes(x=abundance,y=frequency,color=Class)) + 
  geom_point(size=3) + 
  xlab("Average relative abundance (log10 scale)") + 
  ylab("frequency in all samples") + 
  labs(title="Distribution of all OTU phyla-all cont days microbiome") + 
  theme(legend.position="none")

plots <- grid.arrange(
  cont.a.o,
  alf.a.o,
  comp.a.o,
  mix.a.o,
  nrow = 2,
  top = "Abundance - Occupancy plots"
)
###############
#Alfalfa Days
alf.7 <- subset_samples(physeq, TreatmentAndDay %in% "Alfalfa 7")
min(taxa_sums(alf.7))
alf.7 <- filter_taxa(alf.7, function(x) sum(x) >= 10, T)
r.alf.7 <- transform_sample_counts(alf.7, function(x) x/sum(x))
abun.alf.7 <- abund_val(r.alf.7)
alf.7.a.o <- ggplot(abun.alf.7, aes(x=abundance,y=frequency,color=Class)) + 
  geom_point(size=3) + 
  xlab("Average relative abundance (log10 scale)") + 
  ylab("frequency in all samples") + 
  labs(title="Distribution of all OTUs in Alfalfa day 7") + 
  theme(legend.position="none")

alf.14 <- subset_samples(physeq, TreatmentAndDay %in% "Alfalfa 14")
min(taxa_sums(alf.14))
alf.14 <- filter_taxa(alf.14, function(x) sum(x) >= 10, T)
r.alf.14 <- transform_sample_counts(alf.14, function(x) x/sum(x))
abun.alf.14 <- abund_val(r.alf.14)
alf.14.a.o <- ggplot(abun.alf.14, aes(x=abundance,y=frequency,color=Class)) + 
  geom_point(size=3) + 
  xlab("Average relative abundance (log10 scale)") + 
  ylab("frequency in all samples") + 
  labs(title="Distribution of all OTUs in Alfalfa day 14") + 
  theme(legend.position="none")

####testing#### Confirm function one line at a time
###############

otu.abun <- apply(otu_table(r.alf.physeq), 1, mean)
otu.freq <- rowSums(otu_table(r.alf.physeq) != 0)/nsamples(r.alf.physeq)
phyla <- as.vector(data.frame(tax_table(r.alf.physeq))$Phylum)
logotuabun <- cbind.data.frame(abundance = otu.abun, frequency = otu.freq, phyla)
phyla1 <- as.vector(data.frame(tax_table(r.alf.physeq))$Phylum)
levels(phyla1) = c(levels(phyla1),"other")
keep <- logotuabun %>%
  group_by(phyla) %>%
  summarise(n = n()) %>%
  arrange(desc(n)) 
keephyla <- as.vector(keep[,1]) 
phyla1[!(phyla1 %in% keephyla)] = "Other"
phyla1 = as.vector(phyla1)
phyla1 = as.factor(phyla1)
logotuabuncore <- cbind.data.frame(abundance = log(otu.abun), frequency = otu.freq, phyla1)

ggplot(logotuabuncore, aes(x=abundance,y=frequency,color=phyla1)) + 
  geom_point(size=3) + 
  xlab("Average relative abundance") + 
  ylab("frequency in all samples") + 
  labs(title="Distribution of all OTU phyla-all alfalfa days microbiome")



otuabun <- cbind.data.frame(abundance = otu.abun, frequency = otu.freq, phyla)

# Create a scatterplot of OTUs showing their average relative abundance and frequency 
ggplot(otuabun, aes(x=abundance,y=frequency,color=phyla)) + 
  geom_point(size=3) + 
  xlab("Average relative abundance") + 
  ylab("frequency in all samples") + 
  labs(title="Distribution of all OTU phyla-all alfalfa days microbiome") 

ggplot(logotuabun, aes(x=abundance,y=frequency,color=phyla)) + 
  geom_point(size=3) + 
  xlab("Average relative abundance (log10 scale)") + 
  ylab("frequency in all samples") + 
  labs(title="Distribution of all OTU phyla-all alfalfa days microbiome") 
