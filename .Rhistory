phy <- readRDS("data/usda.RDS")
packrat::init()
source('http://bioconductor.org/biocLite.R')
biocLite('phyloseq')
library(phyloseq)
phy <- readRDS("data/usda.RDS")
taxa_names(phy) <- paste0('ASV_', seq_along(taxa_names(phy))) #this renames the "OTU" to ASV1....ASV1000...
sample_data(phy) <- read.delim(sep="\t", file="data/meta.txt", row.names=1, header=TRUE)
colnames(sample_data(phy)) <- c("PI", "source", "date", "concentration")
phy2 <- subset_samples(phy, PI == "Bioreactor") #this selects for the bioreactor samples only
phy2 <- subset_samples(phy2, source != "tile_drainage") #this removes this sample because it didn't have a lot of reads
phy2
colnames(sample_data(phy))
phy@sam_data$PI
sample_names(phy)
worle <- subset_samples(phy, PI == "Jared")
sample_names(worle)
#
unknown <- subset_samples(phy, PI == "unknown")
sample_names(unknown)
phy@sam_data$PI
ignore <- subset_samples(phy, PI == "Ignore")
sample_names(ignore)
phy2
sample_names(phy2)
phy@sam_data$PI
sicheng <- subset_samples(phy, PI == "Sicheng")
sample_names(sicheng)
phy@sam_data$PI
schuyler <- subset_samples(phy, PI == "Schuyler")
sample_names(schuyler)
sample_names(sicheng)
sample_names(phy2)
sample_names(phy)
sample_names(phy)
phy2 <- subset_samples(phy, PI == "Bioreactor") #this selects for the bioreactor samples only
sample_names(phy2)
phy@sam_data$PI
sample_names(phy2)
sample_names(schuyler)
sample_names(sicheng)
sample_names(worle)
sample_names(unknown)
sample_names(ignore)
phy <- readRDS("data/usda.RDS")
taxa_names(phy) <- paste0('ASV_', seq_along(taxa_names(phy))) #this renames the "OTU" to ASV1....ASV1000...
sample_data(phy) <- read.delim(sep="\t", file="data/meta.txt", row.names=1, header=TRUE)
colnames(sample_data(phy)) <- c("PI", "source", "date", "concentration")
sample_names(phy)
worle <- subset_samples(phy, PI == "Jared")
sample_names(worle)
worle_meta <- tibble(sample_data(worle))
library(tidyverse)
install.packages("tidyverse")
worle_meta <- tibble(sample_data(worle))
library(tidyverse)
worle_meta <- tibble(sample_data(worle))
View(worle_meta)
test <- data_frame(sample_data(worle))
test <- as.data.frame(sample_data(worle))
View(test)
View(worle_meta)
sample_names(worle)
worle_meta <- tibble(sample_data(worle)) %>%
rownames_to_column()
View(worle_meta)
sample_data(worle)
View(worle_meta)
row.names(sample_data(worle))
View(test)
sample_names(worle)
metadataworle <- tibble(sample_data(worle)) %>%
rowid_to_column()
View(worle_meta)
metadataworle <- tibble(sample_data(worle)) %>%
row.names(sample_names(worle))
View(worle_meta)
library(devtools)
install_github('schuyler-smith/phylosmith')
library(phylosmith)
install.packages("devtools")
install_github('schuyler-smith/phylosmith')
library(devtools)
install_github('schuyler-smith/phylosmith')
sample_names(worle)
library(phyloseq)
row.names(sample_data(worle))
worle_meta <- sample_data(worle)
View(worle_meta)
row.names(worle_meta)
rownames_to_column(worle_meta)
worle_meta <- as_tibble(rownames_to_column(sample_data(worle)))
View(worle_meta)
worle <- subset_samples(phy, PI == "Jared")
worle_meta <- as_tibble(rownames_to_column(sample_data(worle)))
View(worle_meta)
View(metadataworle)
worle_meta <- rownames_to_column(sample_data(worle))
sample_names(worle)
worle_meta <- data.frame(phyloseq::sample_data(worle))
View(worle_meta)
worle_meta <- data.frame(phyloseq::sample_data(worle)) %>%
mutate(Treatment = row.names())
worle_meta <- data.frame(phyloseq::sample_data(worle)) %>%
rownames_to_column()
View(worle_meta)
worle_meta <- data.frame(phyloseq::sample_data(worle)) %>%
rownames_to_column(var = Treatment)
worle_meta <- data.frame(phyloseq::sample_data(worle)) %>%
rownames_to_column() %>%
select(sample_id = rowname)
View(worle_meta)
write_excel_csv2(worle_meta, path = "data/worle_meta.txt")
View(worle_meta)
write_excel_csv2(worle_meta, path = "data/worle_meta.txt", col_names = T)
View(worle_meta)
sample_names(phy)
phy <- readRDS("data/usda.RDS")
phy
sample_names(phy)
phy <- readRDS("usda.RDS")
taxa_names(phy) <- paste0('ASV_', seq_along(taxa_names(phy))) #this renames the "OTU" to ASV1....ASV1000...
sample_data(phy) <- read.delim(sep="\t", file="meta.txt", row.names=1, header=TRUE)
colnames(sample_data(phy)) <- c("PI", "source", "date", "concentration")
library(c("phyloseq", "tidyverse"))
libraries <- c("phyloseq", "tidyverse")
library(libraries)
list.of.packages <- c("phyloseq", "tidyverse", "phylosmith")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(phyloseq)
library(tidyverse)
library(phylosmith)
phy <- readRDS("usda.RDS")
taxa_names(phy) <- paste0('ASV_', seq_along(taxa_names(phy))) #this renames the "OTU" to ASV1....ASV1000...
sample_data(phy) <- read.delim(sep="\t", file="meta.txt", row.names=1, header=TRUE)
colnames(sample_data(phy)) <- c("PI", "source", "date", "concentration")
phy <- readRDS("data/usda.RDS")
taxa_names(phy) <- paste0('ASV_', seq_along(taxa_names(phy))) #this renames the "OTU" to ASV1....ASV1000...
sample_data(phy) <- read.delim(sep="\t", file="meta.txt", row.names=1, header=TRUE)
sample_data(phy) <- read.delim(sep="\t", file="data/meta.txt", row.names=1, header=TRUE)
colnames(sample_data(phy)) <- c("PI", "source", "date", "concentration")
phy
unique(sample_names(phy))
sample_data(phy)
worle <- subset_samples(phy, PI == "Jared")
worle
write.csv(as.data.frame(sample_data(worle)), file = "data/metameta.csv")
rmarkdown::render_site()
phy <- readRDS("./data/RDS/worle_with_meta.RDS")
rmarkdown::render_site()
phy <- readRDS("./data/RDS/worle_with_meta.RDS")
data <- data.frame(sample_data(phy)) %>%
filter(matrix == "soil") %>%
mutate(Vegetation = case_when(in_plot_location %in% c("s1", "s2", "s3", "s4") ~ "Crop",
in_plot_location %in% c("s6", "s7", "s8", "s9") ~ "Prairie",
TRUE ~ "Border"))
all_data <- data.frame(sample_data(phy)) %>%
full_join(data)
all_data <- all_data %>%
mutate(day = replace(day, day == 't2', "t02"))
sample_names(phy)
rownames(all_data) <- all_data$id
sample_data(phy) <- all_data
colnames(phy@sam_data)
unique(phy@sam_data$matrix)
unique(phy@sam_data$day)
unique(phy@sam_data$depth)
unique(phy@sam_data$treatment)
base_all_measures <- subset_samples(phy, matrix == "soil" & day == "b" & depth == "d1")
min(taxa_sums(base_all_measures))
plot_richness(base_all_measures, x = "Vegetation", color = "treatment")
t0_all_measures <- subset_samples(phy, matrix == "soil" & day == "t0" & depth == "d1")
plot_richness(t0_all_measures, x = "Vegetation", color = "treatment")
t2_all_measures <- subset_samples(phy, matrix == "soil" & day == "t2" & depth == "d1")
t2_all_measures <- subset_samples(phy, matrix == "soil" & day == "t02" & depth == "d1")
plot_richness(t2_all_measures, x = "Vegetation", color = "treatment")
t14_all_measures <- subset_samples(phy, matrix == "soil" & day == "t14" & depth == "d1")
plot_richness(t14_all_measures, x = "Vegetation", color = "treatment")
t42_all_measures <- subset_samples(phy, matrix == "soil" & day == "t42" & depth == "d1")
plot_richness(t42_all_measures, x = "Vegetation", color = "treatment")
all.days.prairie.appended.d1 <- subset_samples(phy, matrix == "soil" & depth == "d1" & treatment %in% c("no_manure_strip", "manured_strip"))
all.days.prairie.appended.d2 <- subset_samples(phy, matrix == "soil" & depth == "d2" & treatment %in% c("no_manure_strip", "manured_strip"))
plot_richness(all.days.prairie.appended.d1, x = "day", color = "treatment", measures = c("Observed", "Shannon"))
plot_richness(all.days.prairie.appended.d2, x = "day", color = "treatment", measures = c("Observed", "Shannon"))
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(phyloseq)
library(tidyverse)
library(gplots)
install.packages("gplots")
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
phy <- readRDS("./data/RDS/worle_with_meta.RDS")
colnames(sample_data(phy))
phy <- readRDS("./data/RDS/worle_with_meta.RDS")
colnames(sample_data(phy))
unique(phy@sam_data$day)
hist(sample_sums(phy))
hist(sample_sums(phy), breaks = 10)
hist(sample_sums(phy), breaks = 100)
manure_otus <- subset_samples(phy, matrix == "manure") %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
otu_table() %>%
rownames()
library(phyloseq)
library(tidyverse)
library(gplots)
library(phylosmith)
manure_otus <- subset_samples(phy, matrix == "manure") %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
otu_table() %>%
rownames()
#aa <- subset_samples(phy, matrix %in% c("manure", "soil")) %>%
#  unique_taxa(treatment = c("matrix"))
cc <- subset_samples(phy, treatment == "no_manure_strip" | day == "b") %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
otu_table() %>%
rownames()
vvv_diag <- venn(list("Manure_ASVs" = manure_otus, "Soil_ASVs" = cc))
manure_persitors <- attr(vvv_diag, "intersections")$Manure_ASVs
# See if lines 32 to 40 make the same plot as using the chunk below, don't change the chunk below
# Check reads, I was under the impression that all samples had at least 10k
phy.OTU <- OTU_to_column(phy)
# source functions
source("code/functions.R")
# Check reads, I was under the impression that all samples had at least 10k
phy.OTU <- OTU_to_column(phy)
manure.phy <- subset_samples(phy.OTU, matrix == "soil") %>%
#rarefy_even_depth(sample.size = 10000, rngseed = 909090) %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
subset_taxa(OTUID %in% manure_persitors)
abundance_heatmap(manure.phy, classification = NULL, treatment = "treatment", subset = "day", transformation = 'none', colors = 'default')
head(otu_table(manure.phy))
# Check reads, I was under the impression that all samples had at least 10k
phy.OTU <- OTU_to_column(phy)
manure.phy <- subset_samples(phy.OTU, matrix == "soil") %>%
#rarefy_even_depth(sample.size = 10000, rngseed = 909090) %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
subset_taxa(OTUID %in% c(manure_persitors))
abundance_heatmap(manure.phy, classification = NULL, treatment = "treatment", subset = "day", transformation = 'none', colors = 'default')
manure_persitors
manure_persitors <- attr(vvv_diag, "intersections")$Manure_ASVs %>%
as.character()
# Check reads, I was under the impression that all samples had at least 10k
phy.OTU <- OTU_to_column(phy)
manure.phy <- subset_samples(phy.OTU, matrix == "soil") %>%
#rarefy_even_depth(sample.size = 10000, rngseed = 909090) %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
transform_sample_counts(function(x) {x/sum(x)}) %>%
subset_taxa(OTUID %in% manure_persitors)
abundance_heatmap(manure.phy, classification = NULL, treatment = "treatment", subset = "day", transformation = 'none', colors = 'default')
manure.phy
